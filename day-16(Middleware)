//APPLICATION LEVEL MIDDLEWARE

const express = require('express');
const app = express();

// Middleware function
app.use((req, res, next) => {
  console.log('Time:', Date.now());
  next(); // Pass control to the next middleware
});

// Route handler
app.get('/', (req, res) => {
  res.send('Hello World!');
});

app.listen(3000, () => {
  console.log('Server is running on port 3000');
});

//ROUTER LEVEL MIDDLEWARE

const express = require('express');
const app = express();
const router = express.Router();

// Middleware function
router.use((req, res, next) => {
  console.log('Request URL:', req.originalUrl);
  next();
});

// Route handler
router.get('/', (req, res) => {
  res.send('Router Home Page');
});

app.use('/router', router);

app.listen(3000, () => {
  console.log('Server is running on port 3000');
});

//ERROR HANDLING MIDDLEWARE
const express = require('express');
const app = express();

// Middleware that causes an error
app.use((req, res, next) => {
  const err = new Error('Something went wrong!');
  next(err); // Pass the error to the error-handling middleware
});

// Error-handling middleware
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).send('Internal Server Error!');
});

app.listen(3000, () => {
  console.log('Server is running on port 3000');
});

//BUILT-IN-MIDDLEWARE

const express = require('express');
const app = express();

// Serving static files
app.use(express.static('public'));

// Parsing JSON bodies
app.use(express.json());

app.listen(3000, () => {
  console.log('Server is running on port 3000');
});

//THIRD-PARTY MIDDLEWARE
const express = require('express');
const morgan = require('morgan');
const bodyParser = require('body-parser');
const app = express();

// Logging requests
app.use(morgan('dev'));

// Parsing JSON bodies
app.use(bodyParser.json());

app.listen(3000, () => {
  console.log('Server is running on port 3000');
});
