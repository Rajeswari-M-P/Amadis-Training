//Routing

import React from 'react';
import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
import Home from './components/Home';
import About from './components/About';
import Contact from './components/Contact';

function App() {
  return (
    <Router>
      <Switch>
        <Route exact path="/" component={Home} />
        <Route path="/about" component={About} />
        <Route path="/contact" component={Contact} />
      </Switch>
    </Router>
  );
}

export default App;

//Nested routing

import React from 'react';
import { Route, Link, useRouteMatch } from 'react-router-dom';
import Team from './Team';
import Company from './Company';

function About() {
  let { path, url } = useRouteMatch();

  return (
    <div>
      <h2>About Us</h2>
      <ul>
        <li>
          <Link to={`${url}/team`}>Team</Link>
        </li>
        <li>
          <Link to={`${url}/company`}>Company</Link>
        </li>
      </ul>

      <Route path={`${path}/team`} component={Team} />
      <Route path={`${path}/company`} component={Company} />
    </div>
  );
}

export default About;

Team.js
import React from 'react';

function Team() {
  return (
    <div>
      <h3>Our Team</h3>
      <p>Details about the team.</p>
    </div>
  );
}

export default Team;

company.js
import React from 'react';

function Company() {
  return (
    <div>
      <h3>Our Company</h3>
      <p>Details about the company.</p>
    </div>
  );
}

export default Company;

//useState
import React, { useState } from 'react';

function Counter() {
  const [count, setCount] = useState(0);

  return (
    <div>
      <p>You clicked {count} times</p>
      <button onClick={() => setCount(count + 1)}>Click me</button>
    </div>
  );
}

export default Counter;

//useEffect

import React, { useEffect, useState } from 'react';

function DataFetcher() {
  const [data, setData] = useState([]);

  useEffect(() => {
    fetch('https://api.example.com/data')
      .then(response => response.json())
      .then(data => setData(data));
  }, []); // The empty array ensures the effect runs only once

  return (
    <ul>
      {data.map(item => (
        <li key={item.id}>{item.name}</li>
      ))}
    </ul>
  );
}

export default DataFetcher;




//useCallback

import React, { useCallback, useState } from 'react';

function Button({ handleClick }) {
  return <button onClick={handleClick}>Click me</button>;
}

function ParentComponent() {
  const [count, setCount] = useState(0);

  const handleClick = useCallback(() => {
    console.log('Button clicked');
  }, []);

  return (
    <div>
      <Button handleClick={handleClick} />
      <p>Count: {count}</p>
      <button onClick={() => setCount(count + 1)}>Re-render</button>
    </div>
  );
}

export default ParentComponent;

